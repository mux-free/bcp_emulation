import wrf


# its the best to define it in a separate python file and load it via
import sys
sys.path.append('/path/to/your/pythonfile/where/you/save/this/in/')
import yourpythonfile
# and call it via yourpythonfile.modellevel_to_pressure()
def modellevel_to_pressure(PS):
    aklay = np.array([0, 0.01878906, 0.1329688, 0.4280859, 0.924414, 1.62293, 2.524805, 3.634453, 4.962383, 6.515274, 8.3075, 10.34879, 12.65398, 15.23512,    18.10488, 21.27871, 24.76691, 28.58203, 32.7325, 37.22598, 42.06668,    47.25586, 52.7909, 58.66457, 64.86477, 71.37383, 78.16859, 85.21914,    92.48985, 99.93845, 107.5174, 115.1732, 122.848, 130.4801, 138.0055,    145.3589, 152.4757, 159.2937, 165.7537, 171.8026, 177.3938, 182.4832,    187.0358, 191.0384, 194.494, 197.413, 199.8055, 201.683, 203.0566,    203.9377, 204.339, 204.2719, 203.7509, 202.7876, 201.398, 199.5966,    197.3972, 194.8178, 191.874, 188.585, 184.9708, 181.0503, 176.8462,    172.382, 167.6805, 162.7672, 157.6719, 152.4194, 147.0388, 141.5674,    136.03, 130.4577, 124.8921, 119.3581, 113.8837, 108.5065, 103.253,    98.1433, 93.19541, 88.42463, 83.83939, 79.43383, 75.1964])


    bklay = np.array([0.9988151, 0.9963163, 0.9934933, 0.9902418, 0.9865207, 0.9823067,    0.977575, 0.9722959, 0.9664326, 0.9599506, 0.9528069, 0.944962,    0.9363701, 0.9269882, 0.9167719, 0.9056743, 0.893654, 0.8806684,    0.8666805, 0.8516564, 0.8355686, 0.8183961, 0.8001264, 0.7807572,    0.7602971, 0.7387676, 0.7162039, 0.692656, 0.6681895, 0.6428859,    0.6168419, 0.5901701, 0.5629966, 0.5354602, 0.5077097, 0.4799018,    0.4521973, 0.424758, 0.3977441, 0.3713087, 0.3455966, 0.3207688,    0.2969762, 0.274298, 0.2527429, 0.2322884, 0.212912, 0.1945903,    0.1772999, 0.1610177, 0.145719, 0.1313805, 0.1179764, 0.1054832,    0.0938737, 0.08312202, 0.07320328, 0.06408833, 0.05575071, 0.04816049,    0.04128718, 0.03510125, 0.02956981, 0.02465918, 0.02033665, 0.01656704,    0.01331083, 0.01053374, 0.008197418, 0.006255596, 0.004674384,    0.003414039, 0.002424481, 0.001672322, 0.001121252, 0.0007256266,    0.0004509675, 0.0002694785, 0.0001552459, 8.541815e-05, 4.1635e-05,   1.555435e-05, 3.39945e-06])

    return (aklay + bklay * PS)
# if that does not work due to the shape of the arrays (PS as 2D and those as 1D) try this return instead

    # ps3d=np.tile(ps[0,:,:],(pv.shape[1],1,1)) # pv is of dim (time,z,lat,lon) thats why you need pv.shape[1], you want to create a 3D pressure field that is the same shape as your other 3D variables to interpolate
    # p3d=(ak+bk*ps3d.T).T
    # return (p3d)

## 3D interpolation e.g. PV to 300 hPa

pv300hPa = wrf.interplevel(PV(3D),Pressure(3D),300.,meta=False)


